package hw9;
import processing.core.PApplet;

public class Test extends PApplet {

	//dimensions of the canvas
			int xMax = 600;
			int yMax = 400;
			Disk [] myDisks = new Disk[20] ;
			int iterationCounter = 0;
			int diskCounter = 1;
			
			public void setup() 
			{
				size(xMax,yMax);

				for (int i = 0; i < myDisks.length; i++) 
					myDisks[i] = new Disk(this);
							
			}
			
			public void draw()
			{
				iterationCounter++;
				background (188, 188, 188);
				if (iterationCounter > 100 && diskCounter < myDisks.length ) {
					diskCounter++;
					iterationCounter = 0;
				}
				for (int i = 0; i < diskCounter; i++)
					myDisks[i].move();
			
			}
			
	}




/**
 * Test program #11: Using objects
 *  
 * @author:      Joanna Klukowska
 * @since:       Nov. 4, 2013
 * 
 * Objects that need to draw themselves on the canvas, 
 * need to be given direct access to the canvas. The Disk class
 * has its own data field of type PApplet that is initialized to 
 * the canvas used by the current application in the constructor
 * call. This way each disk object can draw itself onto the common
 * canvas.  
 * 
 *  For more details see http://processing.org/reference/ 
 */


	