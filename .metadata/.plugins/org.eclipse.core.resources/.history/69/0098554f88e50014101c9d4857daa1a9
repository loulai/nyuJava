import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStreamReader;

public class HuffmanTree {
	
	HuffmanNode root;

	public static void main(String[] args) throws IOException{
		
//		bheap.printHeap();
//		createFromHeap(bheap);
//		htree.printLegend();
		fileToHeap("data");
	}

	public HuffmanTree(HuffmanNode huff){
		this.root = huff;
	}
	
	public void printLegend(){
		printLegend(root, "");
	}
	
	public static BinaryHeap fileToHeap(String filename) throws FileNotFoundException{
		/* get first line from file */
		BufferedReader buffRead = new BufferedReader(new FileReader(new File(System.getProperty("user.dir") + "/src/" + filename)));
		String fileToString = "";
		try {
			fileToString = buffRead.readLine();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		String[] stringToArray = fileToString.split(" ");
		HuffmanNode[] arrayToHuffman = new HuffmanNode[stringToArray.length/2 - 1];
		int k = 0;
		for(int i = 0; i < stringToArray.length; i++){
			HuffmanNode temp = new HuffmanNode (stringToArray[i++], Double.parseDouble(stringToArray[i]));
			arrayToHuffman[k];
			k++;
			/*arrayToHuffman[i] = new HuffmanNode(stringToArray[i], Double.parseDouble(stringToArray[i+1]));
			System.out.printf("[%s, %f]\n", arrayToHuffman[i].letter, arrayToHuffman[i].frequency);
*/		}
		BinaryHeap arrayToHeap = new BinaryHeap(stringToArray);
		return arrayToHeap;
	}
	
	private void printLegend(HuffmanNode t, String s){
		
	}
	
	public static HuffmanTree createFromHeap(BinaryHeap b){
		
	}
	

}
